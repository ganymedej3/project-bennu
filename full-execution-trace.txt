npm run test:all:report                                                                  INT ✘  6m 6s   23:57:54  

> bennu@1.0.0 test:all:report
> npm run test:all && npm run report:generate && npm run report:open


> bennu@1.0.0 test:all
> playwright test src/tests/ --reporter=line,allure-playwright 2>&1 | tee test-results/all-tests-log.txt || true


Running 31 tests using 6 workers
src/tests/ui/specs/ai_inventory.spec.ts:19:7 › AI-Enhanced Inventory Tests with Fallback › should verify the inventory page grid with AI fallback

        Checking for the purposefully broken locator
  1) src/tests/api/specs/error.spec.ts:135:9 › API Error Scenarios › intentionally failing test - expect specific ID that cannot exist 

    Error: expect(received).toBe(expected) // Object.is equality

    Expected: 42
    Received: 101

      153 |         const data = await response.json();
      154 |         
    > 155 |         expect(data.id).toBe(42);  // This will always fail as JSONPlaceholder generates IDs > 100
          |                         ^
      156 |     });
      157 | });
        at /Users/adityak/dev/ganymede/bennu/src/tests/api/specs/error.spec.ts:155:25

src/tests/api/specs/ai_posts.spec.ts:26:7 › AI-Enhanced Posts API Tests › AI-based test data generation for 'posts' resource
AI-generated post data: [
  { userId: 1, id: 1, title: 'title1', body: 'body1' },
  { userId: 2, id: 2, title: 'title2', body: 'body2' },
  { userId: 3, id: 3, title: 'title3', body: 'body3' }
]
Created post with AI data => { userId: 1, id: 101, title: 'title1', body: 'body1' }
Created post with AI data => { userId: 2, id: 101, title: 'title2', body: 'body2' }
src/tests/ui/specs/ai_inventory.spec.ts:19:7 › AI-Enhanced Inventory Tests with Fallback › should verify the inventory page grid with AI fallback

Static locator for inventory container is broken. Attempting AI fallback...

      Initiating fallback to AI for: target is the exact css selector for inventory list element inside the main inventory container

      Full HTML length: 16782
src/tests/api/specs/ai_posts.spec.ts:26:7 › AI-Enhanced Posts API Tests › AI-based test data generation for 'posts' resource
Created post with AI data => { userId: 3, id: 101, title: 'title3', body: 'body3' }
src/tests/ui/specs/ai_inventory.spec.ts:19:7 › AI-Enhanced Inventory Tests with Fallback › should verify the inventory page grid with AI fallback
Parsed from raw response:  {
  "selector": "#inventory_container .inventory_list"
}

      AI returned new locator for "target is the exact css selector for inventory list element inside the main inventory container": #inventory_container .inventory_list

        Locator found by AI: #inventory_container .inventory_list
Static locator for inventory items is broken. Attempting AI fallback...

      Initiating fallback to AI for: product cards with images, titles, prices, add-to-cart

      Full HTML length: 16782
src/tests/api/specs/ai_posts.spec.ts:55:7 › AI-Enhanced Posts API Tests › AI-based negative scenarios for 'POST /posts'
Negative scenarios from AI: [
  {
    description: 'Missing required fields in payload',
    payload: { title: '', body: '' },
    expectedStatus: 400,
    reason: "The API expects both 'title' and 'body' fields to be provided in the JSON body"
  },
  {
    description: 'Invalid data type for a field',
    payload: { title: 123456789, body: true, userId: 'not-a-number' },
    expectedStatus: 400,
    reason: "The 'title' field should be a string, the 'body' field should be a string and the 'userId' field should be a number"
  },
  {
    description: 'Invalid or non-existent user id',
    payload: { title: 'New Post', body: 'This is a new post.', userId: 99999 },
    expectedStatus: 404,
    reason: "The provided 'userId' (99999) does not exist in the system"
  }
]
Running negative scenario: Missing required fields in payload
Scenario expected 400, but got 201
Response body: { title: '', body: '', id: 101 }
Running negative scenario: Invalid data type for a field
Scenario expected 400, but got 201
Response body: { title: 123456789, body: true, userId: 'not-a-number', id: 101 }
Running negative scenario: Invalid or non-existent user id
Scenario expected 404, but got 201
Response body: {
  title: 'New Post',
  body: 'This is a new post.',
  userId: 99999,
  id: 101
}
  2) src/tests/ui/specs/inventory.spec.ts:25:7 › Traditional Inventory Tests › should verify sorting (price high to low, traditional) 

    Test timeout of 30000ms exceeded.

    Error: page.click: Test timeout of 30000ms exceeded.
    Call log:
      - waiting for locator('text=Price (high to low)')
        - locator resolved to <option value="hilo">Price (high to low)</option>
      - attempting click action
        2 × waiting for element to be visible, enabled and stable
          - element is not visible
        - retrying click action
        - waiting 20ms
        2 × waiting for element to be visible, enabled and stable
          - element is not visible
        - retrying click action
          - waiting 100ms
        56 × waiting for element to be visible, enabled and stable
           - element is not visible
         - retrying click action
           - waiting 500ms
        - waiting for element to be visible, enabled and stable


       at src/tests/ui/pages/inventory.page.ts:27

      25 |     // Simulate sorting: click on the sort dropdown and select the given option
      26 |     await this.page.click('.product_sort_container');
    > 27 |     await this.page.click(`text=${option}`);
         |                     ^
      28 |     // Optionally, add a wait or validation for the sorted order
      29 |   }
      30 |
        at InventoryPage.sortItems (/Users/adityak/dev/ganymede/bennu/src/tests/ui/pages/inventory.page.ts:27:21)
        at /Users/adityak/dev/ganymede/bennu/src/tests/ui/specs/inventory.spec.ts:26:5

  3) src/tests/ui/specs/inventory.spec.ts:40:7 › Traditional Inventory Tests › should capture screenshot on failure (traditional) 

    Error: page.goto: net::ERR_CONNECTION_REFUSED at http://localhost:3000/nonexistent
    Call log:
      - navigating to "http://localhost:3000/nonexistent", waiting until "load"


      40 |   test("should capture screenshot on failure (traditional)", async ({ page }, testInfo) => {
      41 |     // This test simulates a failure to demonstrate screenshot capture in Allure
    > 42 |     await page.goto('http://localhost:3000/nonexistent');
         |                ^
      43 |     try {
      44 |       await expect(page.locator('#nonexistent-element')).toBeVisible({ timeout: 5000 });
      45 |     } catch (error) {
        at /Users/adityak/dev/ganymede/bennu/src/tests/ui/specs/inventory.spec.ts:42:16

src/tests/ui/specs/ai_inventory.spec.ts:19:7 › AI-Enhanced Inventory Tests with Fallback › should verify the inventory page grid with AI fallback
Parsed from raw response:  {
  "selector": ".inventory_item"
}

      AI returned new locator for "product cards with images, titles, prices, add-to-cart": .inventory_item
src/tests/ui/specs/ai_inventory.spec.ts:24:7 › AI-Enhanced Inventory Tests with Fallback › should verify sorting functionality (price high to low)
Static locator for sort dropdown did not appear within 5s.
Static locator for sort dropdown is broken. Attempting AI fallback...

      Initiating fallback to AI for: target is the exact css selector for product sort dropdown. find the exact css selector of the element and return "select.xxxxxxxx

      Full HTML length: 16782
Parsed from raw response:  {
  "selector": ".product_sort_container"
}

      AI returned new locator for "target is the exact css selector for product sort dropdown. find the exact css selector of the element and return "select.xxxxxxxx": .product_sort_container
[29/31] src/tests/ui/specs/ai_inventory.spec.ts:29:7 › AI-Enhanced Inventory Tests with Fallback › should verify first product has image/title/description/price/add-to
src/tests/ui/specs/ai_inventory.spec.ts:29:7 › AI-Enhanced Inventory Tests with Fallback › should verify first product has image/title/description/price/add-to-cart
Broken main items locator during first product check. Falling back to AI...

      Initiating fallback to AI for: product cards with images, titles, prices, add-to-cart

      Full HTML length: 16782
Parsed from raw response:  {
  "selector": ".inventory_item"
}

      AI returned new locator for "product cards with images, titles, prices, add-to-cart": .inventory_item
Broken sub-locator for product image. Attempting AI fallback...
Parsed from raw response:  {
  "selector": "#inventory_container .inventory_list .inventory_item:first-child .inventory_item_img img"
}
Broken sub-locator for product title. Attempting AI fallback...
Parsed from raw response:  {
  "selector": "#inventory_container .inventory_item_label a.inventory_item_name"
}
Broken sub-locator for product price. Attempting AI fallback...
Parsed from raw response:  {
  "selector": "#inventory_container .inventory_item:nth-child(1) .pricebar .inventory_item_price"
}
Broken sub-locator for Add to cart button. Attempting AI fallback...
Parsed from raw response:  {
  "selector": "#item_4_img_link + .inventory_item_description > .pricebar > button"
}
AI returned new locator for "Add to cart button": #item_4_img_link + .inventory_item_description > .pricebar > button
src/tests/ui/specs/ai_inventory.spec.ts:33:7 › AI-Enhanced Inventory Tests with Fallback › should demonstrate how we can do compare-locators AI approach
Comparison result: {
  unchanged: {},
  changed: {
    inventoryContainerLocator: { old: '.inventory_container_broken', new: '.inventory_container' },
    inventoryItemsLocator: { old: '.inventory_item_broken', new: '.inventory_item' },
    sortDropdownLocator: {
      old: '.product_sort_container_broken',
      new: '.product_sort_container'
    }
  }
}
Locator inventoryContainerLocator changed from .inventory_container_broken to .inventory_container
Locator inventoryItemsLocator changed from .inventory_item_broken to .inventory_item
Locator sortDropdownLocator changed from .product_sort_container_broken to .product_sort_container
src/tests/ui/specs/ai_inventory.spec.ts:38:7 › AI-Enhanced Inventory Tests with Fallback › should list top 10 key elements for building page objects
Key elements JSON saved to: /Users/adityak/dev/ganymede/bennu/src/tests/ui/pages/ai_inventory_elements.json
Key elements from AI:
- Description: Primary header
  selectors: { 'data-test': 'primary-header' }
- Description: Secondary header
  selectors: { class: 'secondary_header' }
- Description: Inventory container
  selectors: { 'data-test': 'inventory-container' }
- Description: Inventory list
  selectors: { 'data-test': 'inventory-list' }
- Description: Inventory item (first)
  selectors: { class: 'inventory_item', 'data-test': 'inventory-item' }
- Description: Shopping cart container
  selectors: { 'data-test': 'shopping-cart-container' }
- Description: Footer
  selectors: { 'data-test': 'footer' }
- Description: Twitter link in footer
  selectors: { class: 'social_twitter', 'data-test': 'social-twitter' }
- Description: Facebook link in footer
  selectors: { class: 'social_facebook', 'data-test': 'social-facebook' }
- Description: LinkedIn link in footer
  selectors: { class: 'social_linkedin', 'data-test': 'social-linkedin' }
  Slow test file: src/tests/ui/specs/ai_inventory.spec.ts (2.7m)
  Slow test file: src/tests/api/specs/ai_posts.spec.ts (30.7s)
  Consider running tests from slow files in parallel, see https://playwright.dev/docs/test-parallel.
  3 failed
    src/tests/api/specs/error.spec.ts:135:9 › API Error Scenarios › intentionally failing test - expect specific ID that cannot exist 
    src/tests/ui/specs/inventory.spec.ts:25:7 › Traditional Inventory Tests › should verify sorting (price high to low, traditional) 
    src/tests/ui/specs/inventory.spec.ts:40:7 › Traditional Inventory Tests › should capture screenshot on failure (traditional) 
  28 passed (2.7m)

> bennu@1.0.0 report:generate
> allure generate allure-results -o allure-report --clean

Report successfully generated to allure-report

> bennu@1.0.0 report:open
> allure open allure-report

Starting web server...
2025-02-17 00:00:47.705:INFO::main: Logging initialized @156ms to org.eclipse.jetty.util.log.StdErrLog
Server started at <http://192.168.4.28:52100/>. Press <Ctrl+C> to exit
